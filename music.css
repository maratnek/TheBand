section.music {
  background: white;
}

.music h2 {
  font-family: var(--oswald-family);
}

.music h4 {
  font-family: var(--oswald-family);
  font-weight: lighter;
}

.album {
  padding: 20px 40px;
  display: grid;
  grid-template: auto 1fr / 1fr 1fr;
}

.cover img{
  width: 100%;
}

.discography {
  grid-area: 2 / 1 / 3 / 2;
}

.discography .list {
  display: grid;
  grid-template-columns: 3fr 1fr 1fr 1fr 1fr;
}

.discography .list button {
  background: var(--brown-light);
  color: var(--brown-col);
  padding: 0.1em 1em;
  border: none;
  text-transform: uppercase;
  font-family: var(--oswald-family);
}

.discography .list .buy button {
  background: var(--brown-col);
  color: var(--brown-light);
}

.player-list ul {
  list-style: none;
}

.player-list li {
  width: 100%;
  display: flex;
  justify-content: ;
}

.player-list li h5{
}

.player-list li .long {
  align-self: flex-end;
}

.player-list li .long {
  align-self: flex-end;
}


.song h5, .player-list h5 {
  font-family: var(--lora-family);
  color: var(--brown-col);i
  font-weight: 400;
  font-style: italic;
}

.player {
  position: relative;
  width: 100%;
  max-width: 350px;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-column-gap: 0px;
  grid-row-gap: 30px;
  margin: 30px auto;
  /* align-items: center; */
  align-content: center;
  justify-content: center;
  /* justify-items: center; */
}

.track {
  grid-column: 1 / 4;
}

:root {
  --player-arrow: 10px;// influence on the player
  --track-position: 0;
}

.circle {
  
}

.player .arrow {
  cursor: pointer;
  width: 0;
  border: var(--player-arrow) solid rgba(0,0,0,0);
  border-right: calc(var(--player-arrow)*2) solid var(--brown-light);
}

.player .arrow::before {
  cursor: pointer;
  position: absolute;
  top: 0;
  left: calc(var(--player-arrow)*2);
  content: '';
  border: var(--player-arrow) solid rgba(0,0,0,0);
  border-right: calc(var(--player-arrow)*2) solid var(--brown-light);
}

.player .control {
  position: relative;
  justify-self: center;
}

.player .control .play {
  position: absolute;
  cursor: pointer;
  border: var(--player-arrow) solid rgba(0,0,0,0);
  border-right: calc(var(--player-arrow)*2) solid var(--brown-light);
  transform: rotate(180deg);
}

.player .control .pause {
  display: none;
  position: absolute;
  cursor: pointer;
  content: '';
  height: calc(var(--player-arrow)*2);
  width: var(--player-arrow);
  width: calc(var(--player-arrow)*4/3);
}

.player .control .pause::after,
.player .control .pause::before {
  position: absolute;
  content: '';
  cursor: pointer;
  height: calc(var(--player-arrow)*2);
  width: calc(var(--player-arrow)/1.5);
  background-color: var(--brown-light);
}

.player .control .pause::before {
  transform: translateX(var(--player-arrow));
}

.player .track {
  cursor: pointer;
  position: relative;
  height: calc(var(--player-arrow)/2);
  border-radius: calc(var(--player-arrow));
  background-color: var(--brown-light);
  background-color: var(--brown-col);
}

.player .current {
  position: absolute;
  height: var(--player-arrow);
  width: var(--player-arrow);
  border-radius: 50%;
  background-color: var(--brown-col);
  top: -50%;
  left: calc(var(--track-position) - (var(--player-arrow)/2));
}

.player .progress {
  position: absolute;
  top: 0;
  width: var(--track-position);
  height: calc(var(--player-arrow)/2);
  border-radius: calc(var(--player-arrow));
  background-color: var(--brown-col);
  background-color: var(--brown-light);
}
